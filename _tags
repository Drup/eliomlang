# OASIS_START
# DO NOT EDIT (digest: b91f4a810c0b2247e8a9f723af94b135)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library eliomlang_ppx
"lib/eliomlang_ppx.cmxs": use_eliomlang_ppx
<lib/*.ml{,i,y}>: package(eliom_typechecker)
<lib/*.ml{,i,y}>: package(ppx_core)
<lib/*.ml{,i,y}>: package(ppx_tools)
<lib/*.ml{,i,y}>: package(ppx_tools.metaquot)
# Executable eliom_desugar
"bin/eliom_desugar.byte": package(eliom_typechecker)
"bin/eliom_desugar.byte": package(ppx_core)
"bin/eliom_desugar.byte": package(ppx_tools)
"bin/eliom_desugar.byte": package(ppx_tools.metaquot)
"bin/eliom_desugar.byte": use_eliomlang_ppx
<bin/*.ml{,i,y}>: package(eliom_typechecker)
<bin/*.ml{,i,y}>: package(ppx_core)
<bin/*.ml{,i,y}>: package(ppx_tools)
<bin/*.ml{,i,y}>: package(ppx_tools.metaquot)
<bin/*.ml{,i,y}>: use_eliomlang_ppx
# Library eliom_runtime_server
"runtime/server/eliom_runtime_server.cmxs": use_eliom_runtime_server
<runtime/server/*.ml{,i,y}>: package(re)
# Library eliom_runtime_client
"runtime/client/eliom_runtime_client.cmxs": use_eliom_runtime_client
<runtime/client/*.ml{,i,y}>: package(js_of_ocaml)
<runtime/client/*.ml{,i,y}>: package(js_of_ocaml.ppx)
# Library eliom_runtime_lwt
"runtime/lwt/eliom_runtime_lwt.cmxs": use_eliom_runtime_lwt
<runtime/lwt/*.ml{,i,y}>: package(lwt)
<runtime/lwt/*.ml{,i,y}>: package(re)
<runtime/lwt/*.ml{,i,y}>: use_eliom_runtime_server
# OASIS_STOP

# Work around ppx_core issues
<*/*.{native,byte}>: predicate(ppx_driver)

not <compiler/**>: warn(+A-4-6-9-40-42-44-48)
<compiler/**>: principal, warn(+33..39+48+50)
true: warn_error(+1..49)
true: strict_sequence, safe_string, short_paths, strict_formats
true: bin_annot

# Better locations and loc in .mlis
true: keep_locs

# We use the local typechecker in priority.
<lib/**> or <bin/**>: open(Eliom_typechecker)
