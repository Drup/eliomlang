OASISFormat: 0.4
Name:        Eliomlang
Version:     0.1.0
Synopsis:    Eliomlang
Authors:     Gabriel Radanne
License:     GPL
Plugins:     META (0.4), DevFiles (0.4)
BuildTools:  ocamlbuild

AlphaFeatures: ocamlbuild_more_args, pure_interface
BetaFeatures: findlib_directory
OCamlVersion:     >= 4.03.0

## Ppx libraries

Library "eliomlang_ppx"
  FindlibContainers: eliomlang.ppx
  FindlibName: internal
  Path: lib
  Modules: El_desugar
  InternalModules: El_utils
  BuildDepends:
    ppx_tools, ppx_tools.metaquot, ppx_core

## Executable

Executable "eliom_desugar"
  Path: bin
  MainIs: eliom_desugar.ml
  BuildDepends: eliomlang.ppx.internal
  CompiledObject: best

Library "eliomlang_ppx_ex"
  FindlibContainers: eliomlang
  FindlibName: ppx
  Path: bin
  InternalModules: Eliom_desugar_ex
  XMETAExtraLines: ppx = "eliom_desugar"

## Runtime

Library "eliom_runtime_server"
  FindlibContainers: eliomlang.runtime
  FindlibName: server
  FindlibDirectory: server
  Path: runtime/server
  Modules: Eliom_runtime, Eliom_wrap, Eliom_fragment
  InternalModules: Eliom_serial
  BuildDepends: re

Library "eliom_runtime_client"
  FindlibContainers: eliomlang.runtime
  FindlibName: client
  FindlibDirectory: client
  Path: runtime/client
  Modules: Eliom_runtime, Eliom_wrap, Eliom_fragment
  InternalModules: Eliom_serial
  BuildDepends: js_of_ocaml, js_of_ocaml.ppx
  CompiledObject: byte

Library "eliom_runtime_lwt"
  FindlibContainers: eliomlang.runtime
  FindlibName: lwt
  FindlibDirectory: lwt
  Path: runtime/lwt
  Modules: Eliom_lwt
  BuildDepends: eliomlang.runtime.server, lwt

# Document "eliom-lang"
#   Type: ocamlbuild (0.3)
#   BuildTools: ocamldoc
#   Title: API reference for Eliom-lang
#   XOCamlbuildPath: .
#   XOCamlbuildExtraArgs:
#     "-docflags '-t Eliom-lang -colorize-code -short-functors -charset utf-8'"
#   XOCamlbuildLibraries: eliomlang

SourceRepository head
  Type: git
  Location: https://github.com/Drup/eliom-lang.git
  Browser: https://github.com/Drup/eliom-lang

## Test

Executable "ppx_tester"
  Path: bin
  MainIs: ppx_tester.ml
  BuildDepends: eliomlang.ppx.internal
  CompiledObject: best
  Install: false
  Build$: flag(tests)

Test basic_website
  WorkingDirectory: _build/
  PreCommand: cp -r ../test .
  Command: $ppx_tester test/shared.eliom test/shared.result.eliom test/shared.expected.eliom
  TestTools: ppx_tester
  Run$: flag(tests)

#Local Variables:
#compile-command: "oasis setup"
#End:
